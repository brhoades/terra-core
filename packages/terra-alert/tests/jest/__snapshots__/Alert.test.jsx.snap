exports[`1. Alert with no props should render a default component 1`] = `
<IntlProvider
  locale="en-US"
  messages={
    Object {
      "Terra.alert.advisory": "Advisory.",
      "Terra.alert.alert": "Alert.",
      "Terra.alert.dismiss": "Dismiss",
      "Terra.alert.error": "Error.",
      "Terra.alert.gapChecking": "Required Action.",
      "Terra.alert.info": "Information.",
      "Terra.alert.outsideRecords": "Outside Records.",
      "Terra.alert.success": "Success.",
      "Terra.alert.warning": "Warning.",
    }
  }>
  <Alert
    alertAction={null}
    customIcon={null}
    customStatusColor=""
    onDismiss={null}
    title=""
    type="alert">
    <ResponsiveElement
      defaultElement={
        <div
          className="alert narrow alertType"
          style={Object {}}>
          <div
            className="body bodyNarrow">
            <div
              className="icon">
              <IconAlert
                height="1.3333rem"
                viewBox="0 0 48 48"
                width="1.3333rem"
                xmlns="http://www.w3.org/2000/svg" />
            </div>
            <div
              className="section">
              <strong
                className="title">
                Alert.
              </strong>
              <div
                className="content" />
            </div>
          </div>
          
        </div>
      }
      responsiveTo="parent"
      tiny={
        <div
          className="alert wide alertType"
          style={Object {}}>
          <div
            className="body bodyWide">
            <div
              className="icon">
              <IconAlert
                height="1.3333rem"
                viewBox="0 0 48 48"
                width="1.3333rem"
                xmlns="http://www.w3.org/2000/svg" />
            </div>
            <div
              className="section">
              <strong
                className="title">
                Alert.
              </strong>
              <div
                className="content" />
            </div>
          </div>
          
        </div>
      }>
      <div />
    </ResponsiveElement>
  </Alert>
</IntlProvider>
`;

exports[`2. Dismissible Alert that includes actions section should render an alert component with a dismiss button 1`] = `
<IntlProvider
  locale="en-US"
  messages={
    Object {
      "Terra.alert.advisory": "Advisory.",
      "Terra.alert.alert": "Alert.",
      "Terra.alert.dismiss": "Dismiss",
      "Terra.alert.error": "Error.",
      "Terra.alert.gapChecking": "Required Action.",
      "Terra.alert.info": "Information.",
      "Terra.alert.outsideRecords": "Outside Records.",
      "Terra.alert.success": "Success.",
      "Terra.alert.warning": "Warning.",
    }
  }>
  <Alert
    alertAction={null}
    customIcon={null}
    customStatusColor=""
    onDismiss={[Function]}
    title=""
    type="alert">
    <ResponsiveElement
      defaultElement={
        <div
          className="alert narrow alertType"
          style={Object {}}>
          <div
            className="body bodyNarrow">
            <div
              className="icon">
              <IconAlert
                height="1.3333rem"
                viewBox="0 0 48 48"
                width="1.3333rem"
                xmlns="http://www.w3.org/2000/svg" />
            </div>
            <div
              className="section">
              <strong
                className="title">
                Alert.
              </strong>
              <div
                className="content">
                This is a test
              </div>
            </div>
          </div>
          <div
            className="actions">
            <Button
              isBlock={false}
              isCompact={false}
              isDisabled={false}
              isReversed={false}
              onClick={[Function]}
              size="medium"
              text="Dismiss"
              type="button"
              variant="secondary" />
          </div>
        </div>
      }
      responsiveTo="parent"
      tiny={
        <div
          className="alert wide alertType"
          style={Object {}}>
          <div
            className="body bodyWide">
            <div
              className="icon">
              <IconAlert
                height="1.3333rem"
                viewBox="0 0 48 48"
                width="1.3333rem"
                xmlns="http://www.w3.org/2000/svg" />
            </div>
            <div
              className="section">
              <strong
                className="title">
                Alert.
              </strong>
              <div
                className="content">
                This is a test
              </div>
            </div>
          </div>
          <div
            className="actions">
            <Button
              isBlock={false}
              isCompact={false}
              isDisabled={false}
              isReversed={false}
              onClick={[Function]}
              size="medium"
              text="Dismiss"
              type="button"
              variant="secondary" />
          </div>
        </div>
      }>
      <div />
    </ResponsiveElement>
  </Alert>
</IntlProvider>
`;

exports[`3. Alert of type alert with text content should render an Alert component of type alert 1`] = `
<IntlProvider
  locale="en-US"
  messages={
    Object {
      "Terra.alert.advisory": "Advisory.",
      "Terra.alert.alert": "Alert.",
      "Terra.alert.dismiss": "Dismiss",
      "Terra.alert.error": "Error.",
      "Terra.alert.gapChecking": "Required Action.",
      "Terra.alert.info": "Information.",
      "Terra.alert.outsideRecords": "Outside Records.",
      "Terra.alert.success": "Success.",
      "Terra.alert.warning": "Warning.",
    }
  }>
  <Alert
    alertAction={null}
    customIcon={null}
    customStatusColor=""
    onDismiss={null}
    title=""
    type="alert">
    <ResponsiveElement
      defaultElement={
        <div
          className="alert narrow alertType"
          style={Object {}}>
          <div
            className="body bodyNarrow">
            <div
              className="icon">
              <IconAlert
                height="1.3333rem"
                viewBox="0 0 48 48"
                width="1.3333rem"
                xmlns="http://www.w3.org/2000/svg" />
            </div>
            <div
              className="section">
              <strong
                className="title">
                Alert.
              </strong>
              <div
                className="content">
                This is an alert.
              </div>
            </div>
          </div>
          
        </div>
      }
      responsiveTo="parent"
      tiny={
        <div
          className="alert wide alertType"
          style={Object {}}>
          <div
            className="body bodyWide">
            <div
              className="icon">
              <IconAlert
                height="1.3333rem"
                viewBox="0 0 48 48"
                width="1.3333rem"
                xmlns="http://www.w3.org/2000/svg" />
            </div>
            <div
              className="section">
              <strong
                className="title">
                Alert.
              </strong>
              <div
                className="content">
                This is an alert.
              </div>
            </div>
          </div>
          
        </div>
      }>
      <div />
    </ResponsiveElement>
  </Alert>
</IntlProvider>
`;

exports[`4. Alert of type error with text content should render an Alert component of type error 1`] = `
<IntlProvider
  locale="en-US"
  messages={
    Object {
      "Terra.alert.advisory": "Advisory.",
      "Terra.alert.alert": "Alert.",
      "Terra.alert.dismiss": "Dismiss",
      "Terra.alert.error": "Error.",
      "Terra.alert.gapChecking": "Required Action.",
      "Terra.alert.info": "Information.",
      "Terra.alert.outsideRecords": "Outside Records.",
      "Terra.alert.success": "Success.",
      "Terra.alert.warning": "Warning.",
    }
  }>
  <Alert
    alertAction={null}
    customIcon={null}
    customStatusColor=""
    onDismiss={null}
    title=""
    type="error">
    <ResponsiveElement
      defaultElement={
        <div
          className="alert narrow errorType"
          style={Object {}}>
          <div
            className="body bodyNarrow">
            <div
              className="icon">
              <IconError
                height="1.3333rem"
                viewBox="0 0 48 48"
                width="1.3333rem"
                xmlns="http://www.w3.org/2000/svg" />
            </div>
            <div
              className="section">
              <strong
                className="title">
                Error.
              </strong>
              <div
                className="content">
                This is an error.
              </div>
            </div>
          </div>
          
        </div>
      }
      responsiveTo="parent"
      tiny={
        <div
          className="alert wide errorType"
          style={Object {}}>
          <div
            className="body bodyWide">
            <div
              className="icon">
              <IconError
                height="1.3333rem"
                viewBox="0 0 48 48"
                width="1.3333rem"
                xmlns="http://www.w3.org/2000/svg" />
            </div>
            <div
              className="section">
              <strong
                className="title">
                Error.
              </strong>
              <div
                className="content">
                This is an error.
              </div>
            </div>
          </div>
          
        </div>
      }>
      <div />
    </ResponsiveElement>
  </Alert>
</IntlProvider>
`;

exports[`5. Alert of type warning with text content should render an Alert component of type warning 1`] = `
<IntlProvider
  locale="en-US"
  messages={
    Object {
      "Terra.alert.advisory": "Advisory.",
      "Terra.alert.alert": "Alert.",
      "Terra.alert.dismiss": "Dismiss",
      "Terra.alert.error": "Error.",
      "Terra.alert.gapChecking": "Required Action.",
      "Terra.alert.info": "Information.",
      "Terra.alert.outsideRecords": "Outside Records.",
      "Terra.alert.success": "Success.",
      "Terra.alert.warning": "Warning.",
    }
  }>
  <Alert
    alertAction={null}
    customIcon={null}
    customStatusColor=""
    onDismiss={null}
    title=""
    type="warning">
    <ResponsiveElement
      defaultElement={
        <div
          className="alert narrow warningType"
          style={Object {}}>
          <div
            className="body bodyNarrow">
            <div
              className="icon">
              <IconWarning
                height="1.3333rem"
                viewBox="0 0 48 48"
                width="1.3333rem"
                xmlns="http://www.w3.org/2000/svg" />
            </div>
            <div
              className="section">
              <strong
                className="title">
                Warning.
              </strong>
              <div
                className="content">
                This is an warning.
              </div>
            </div>
          </div>
          
        </div>
      }
      responsiveTo="parent"
      tiny={
        <div
          className="alert wide warningType"
          style={Object {}}>
          <div
            className="body bodyWide">
            <div
              className="icon">
              <IconWarning
                height="1.3333rem"
                viewBox="0 0 48 48"
                width="1.3333rem"
                xmlns="http://www.w3.org/2000/svg" />
            </div>
            <div
              className="section">
              <strong
                className="title">
                Warning.
              </strong>
              <div
                className="content">
                This is an warning.
              </div>
            </div>
          </div>
          
        </div>
      }>
      <div />
    </ResponsiveElement>
  </Alert>
</IntlProvider>
`;

exports[`6. Alert of type gap-checking with text content should render an Alert component of type gap-checking 1`] = `
<IntlProvider
  locale="en-US"
  messages={
    Object {
      "Terra.alert.advisory": "Advisory.",
      "Terra.alert.alert": "Alert.",
      "Terra.alert.dismiss": "Dismiss",
      "Terra.alert.error": "Error.",
      "Terra.alert.gapChecking": "Required Action.",
      "Terra.alert.info": "Information.",
      "Terra.alert.outsideRecords": "Outside Records.",
      "Terra.alert.success": "Success.",
      "Terra.alert.warning": "Warning.",
    }
  }>
  <Alert
    alertAction={null}
    customIcon={null}
    customStatusColor=""
    onDismiss={null}
    title=""
    type="gap_checking">
    <ResponsiveElement
      defaultElement={
        <div
          className="alert narrow gapCheckingType"
          style={Object {}}>
          <div
            className="body bodyNarrow">
            <div
              className="icon">
              <IconRequired
                height="1.3333rem"
                viewBox="0 0 48 48"
                width="1.3333rem"
                xmlns="http://www.w3.org/2000/svg" />
            </div>
            <div
              className="section">
              <strong
                className="title">
                Required Action.
              </strong>
              <div
                className="content">
                This is a gap-checking alert.
              </div>
            </div>
          </div>
          
        </div>
      }
      responsiveTo="parent"
      tiny={
        <div
          className="alert wide gapCheckingType"
          style={Object {}}>
          <div
            className="body bodyWide">
            <div
              className="icon">
              <IconRequired
                height="1.3333rem"
                viewBox="0 0 48 48"
                width="1.3333rem"
                xmlns="http://www.w3.org/2000/svg" />
            </div>
            <div
              className="section">
              <strong
                className="title">
                Required Action.
              </strong>
              <div
                className="content">
                This is a gap-checking alert.
              </div>
            </div>
          </div>
          
        </div>
      }>
      <div />
    </ResponsiveElement>
  </Alert>
</IntlProvider>
`;

exports[`7. Alert of type advisory with text content should render an Alert component of type advisory 1`] = `
<IntlProvider
  locale="en-US"
  messages={
    Object {
      "Terra.alert.advisory": "Advisory.",
      "Terra.alert.alert": "Alert.",
      "Terra.alert.dismiss": "Dismiss",
      "Terra.alert.error": "Error.",
      "Terra.alert.gapChecking": "Required Action.",
      "Terra.alert.info": "Information.",
      "Terra.alert.outsideRecords": "Outside Records.",
      "Terra.alert.success": "Success.",
      "Terra.alert.warning": "Warning.",
    }
  }>
  <Alert
    alertAction={null}
    customIcon={null}
    customStatusColor=""
    onDismiss={null}
    title=""
    type="advisory">
    <ResponsiveElement
      defaultElement={
        <div
          className="alert narrow advisoryType"
          style={Object {}}>
          <div
            className="body bodyNarrow">
            <div
              className="icon" />
            <div
              className="section">
              <strong
                className="title">
                Advisory.
              </strong>
              <div
                className="content">
                This is an advisory alert.
              </div>
            </div>
          </div>
          
        </div>
      }
      responsiveTo="parent"
      tiny={
        <div
          className="alert wide advisoryType"
          style={Object {}}>
          <div
            className="body bodyWide">
            <div
              className="icon" />
            <div
              className="section">
              <strong
                className="title">
                Advisory.
              </strong>
              <div
                className="content">
                This is an advisory alert.
              </div>
            </div>
          </div>
          
        </div>
      }>
      <div />
    </ResponsiveElement>
  </Alert>
</IntlProvider>
`;

exports[`8. Alert of type info with text content should render an Alert component of type info 1`] = `
<IntlProvider
  locale="en-US"
  messages={
    Object {
      "Terra.alert.advisory": "Advisory.",
      "Terra.alert.alert": "Alert.",
      "Terra.alert.dismiss": "Dismiss",
      "Terra.alert.error": "Error.",
      "Terra.alert.gapChecking": "Required Action.",
      "Terra.alert.info": "Information.",
      "Terra.alert.outsideRecords": "Outside Records.",
      "Terra.alert.success": "Success.",
      "Terra.alert.warning": "Warning.",
    }
  }>
  <Alert
    alertAction={null}
    customIcon={null}
    customStatusColor=""
    onDismiss={null}
    title=""
    type="info">
    <ResponsiveElement
      defaultElement={
        <div
          className="alert narrow infoType"
          style={Object {}}>
          <div
            className="body bodyNarrow">
            <div
              className="icon">
              <IconInformation
                height="1.3333rem"
                viewBox="0 0 48 48"
                width="1.3333rem"
                xmlns="http://www.w3.org/2000/svg" />
            </div>
            <div
              className="section">
              <strong
                className="title">
                Information.
              </strong>
              <div
                className="content">
                This is an information alert.
              </div>
            </div>
          </div>
          
        </div>
      }
      responsiveTo="parent"
      tiny={
        <div
          className="alert wide infoType"
          style={Object {}}>
          <div
            className="body bodyWide">
            <div
              className="icon">
              <IconInformation
                height="1.3333rem"
                viewBox="0 0 48 48"
                width="1.3333rem"
                xmlns="http://www.w3.org/2000/svg" />
            </div>
            <div
              className="section">
              <strong
                className="title">
                Information.
              </strong>
              <div
                className="content">
                This is an information alert.
              </div>
            </div>
          </div>
          
        </div>
      }>
      <div />
    </ResponsiveElement>
  </Alert>
</IntlProvider>
`;

exports[`9. Alert of type success with text content should render an Alert component of type success 1`] = `
<IntlProvider
  locale="en-US"
  messages={
    Object {
      "Terra.alert.advisory": "Advisory.",
      "Terra.alert.alert": "Alert.",
      "Terra.alert.dismiss": "Dismiss",
      "Terra.alert.error": "Error.",
      "Terra.alert.gapChecking": "Required Action.",
      "Terra.alert.info": "Information.",
      "Terra.alert.outsideRecords": "Outside Records.",
      "Terra.alert.success": "Success.",
      "Terra.alert.warning": "Warning.",
    }
  }>
  <Alert
    alertAction={null}
    customIcon={null}
    customStatusColor=""
    onDismiss={null}
    title=""
    type="success">
    <ResponsiveElement
      defaultElement={
        <div
          className="alert narrow successType"
          style={Object {}}>
          <div
            className="body bodyNarrow">
            <div
              className="icon">
              <IconSuccess
                height="1.3333rem"
                viewBox="0 0 48 48"
                width="1.3333rem"
                xmlns="http://www.w3.org/2000/svg" />
            </div>
            <div
              className="section">
              <strong
                className="title">
                Success.
              </strong>
              <div
                className="content">
                This is a success alert.
              </div>
            </div>
          </div>
          
        </div>
      }
      responsiveTo="parent"
      tiny={
        <div
          className="alert wide successType"
          style={Object {}}>
          <div
            className="body bodyWide">
            <div
              className="icon">
              <IconSuccess
                height="1.3333rem"
                viewBox="0 0 48 48"
                width="1.3333rem"
                xmlns="http://www.w3.org/2000/svg" />
            </div>
            <div
              className="section">
              <strong
                className="title">
                Success.
              </strong>
              <div
                className="content">
                This is a success alert.
              </div>
            </div>
          </div>
          
        </div>
      }>
      <div />
    </ResponsiveElement>
  </Alert>
</IntlProvider>
`;

exports[`10. Alert of type outside records with text content should render an Alert component of type confirmation 1`] = `
<IntlProvider
  locale="en-US"
  messages={
    Object {
      "Terra.alert.advisory": "Advisory.",
      "Terra.alert.alert": "Alert.",
      "Terra.alert.dismiss": "Dismiss",
      "Terra.alert.error": "Error.",
      "Terra.alert.gapChecking": "Required Action.",
      "Terra.alert.info": "Information.",
      "Terra.alert.outsideRecords": "Outside Records.",
      "Terra.alert.success": "Success.",
      "Terra.alert.warning": "Warning.",
    }
  }>
  <Alert
    alertAction={null}
    customIcon={null}
    customStatusColor=""
    onDismiss={null}
    title=""
    type="outside_records">
    <ResponsiveElement
      defaultElement={
        <div
          className="alert narrow outsideRecordsType"
          style={Object {}}>
          <div
            className="body bodyNarrow">
            <div
              className="icon">
              <IconDiamond
                height="1.3333rem"
                viewBox="0 0 48 48"
                width="1.3333rem"
                xmlns="http://www.w3.org/2000/svg" />
            </div>
            <div
              className="section">
              <strong
                className="title">
                Outside Records.
              </strong>
              <div
                className="content">
                This is an outside records alert.
              </div>
            </div>
          </div>
          
        </div>
      }
      responsiveTo="parent"
      tiny={
        <div
          className="alert wide outsideRecordsType"
          style={Object {}}>
          <div
            className="body bodyWide">
            <div
              className="icon">
              <IconDiamond
                height="1.3333rem"
                viewBox="0 0 48 48"
                width="1.3333rem"
                xmlns="http://www.w3.org/2000/svg" />
            </div>
            <div
              className="section">
              <strong
                className="title">
                Outside Records.
              </strong>
              <div
                className="content">
                This is an outside records alert.
              </div>
            </div>
          </div>
          
        </div>
      }>
      <div />
    </ResponsiveElement>
  </Alert>
</IntlProvider>
`;

exports[`11. Alert of type custom with custom title and text content should render an Alert component of type custom 1`] = `
<IntlProvider
  locale="en-US"
  messages={
    Object {
      "Terra.alert.advisory": "Advisory.",
      "Terra.alert.alert": "Alert.",
      "Terra.alert.dismiss": "Dismiss",
      "Terra.alert.error": "Error.",
      "Terra.alert.gapChecking": "Required Action.",
      "Terra.alert.info": "Information.",
      "Terra.alert.outsideRecords": "Outside Records.",
      "Terra.alert.success": "Success.",
      "Terra.alert.warning": "Warning.",
    }
  }>
  <Alert
    alertAction={null}
    customIcon={
      <IconHelp
        height="1.3333rem"
        viewBox="0 0 48 48"
        width="1.3333rem"
        xmlns="http://www.w3.org/2000/svg" />
    }
    customStatusColor="orange"
    onDismiss={null}
    title="Help!"
    type="custom">
    <ResponsiveElement
      defaultElement={
        <div
          className="alert narrow customType"
          style={
            Object {
              "color": "orange",
            }
          }>
          <div
            className="body bodyNarrow">
            <div
              className="icon">
              <IconHelp
                height="1.3333rem"
                viewBox="0 0 48 48"
                width="1.3333rem"
                xmlns="http://www.w3.org/2000/svg" />
            </div>
            <div
              className="section sectionCustom">
              <strong
                className="title">
                Help!
              </strong>
              <div
                className="content">
                This is a custom alert.
              </div>
            </div>
          </div>
          
        </div>
      }
      responsiveTo="parent"
      tiny={
        <div
          className="alert wide customType"
          style={
            Object {
              "color": "orange",
            }
          }>
          <div
            className="body bodyWide">
            <div
              className="icon">
              <IconHelp
                height="1.3333rem"
                viewBox="0 0 48 48"
                width="1.3333rem"
                xmlns="http://www.w3.org/2000/svg" />
            </div>
            <div
              className="section sectionCustom">
              <strong
                className="title">
                Help!
              </strong>
              <div
                className="content">
                This is a custom alert.
              </div>
            </div>
          </div>
          
        </div>
      }>
      <div />
    </ResponsiveElement>
  </Alert>
</IntlProvider>
`;

exports[`12. Alert of type info with custom title and HTML content should render an Alert component of type info with custom title and HTML content 1`] = `
<IntlProvider
  locale="en-US"
  messages={
    Object {
      "Terra.alert.advisory": "Advisory.",
      "Terra.alert.alert": "Alert.",
      "Terra.alert.dismiss": "Dismiss",
      "Terra.alert.error": "Error.",
      "Terra.alert.gapChecking": "Required Action.",
      "Terra.alert.info": "Information.",
      "Terra.alert.outsideRecords": "Outside Records.",
      "Terra.alert.success": "Success.",
      "Terra.alert.warning": "Warning.",
    }
  }>
  <Alert
    alertAction={null}
    customIcon={null}
    customStatusColor=""
    onDismiss={null}
    title="Gettysburg Address"
    type="info">
    <ResponsiveElement
      defaultElement={
        <div
          className="alert narrow infoType"
          style={Object {}}>
          <div
            className="body bodyNarrow">
            <div
              className="icon">
              <IconInformation
                height="1.3333rem"
                viewBox="0 0 48 48"
                width="1.3333rem"
                xmlns="http://www.w3.org/2000/svg" />
            </div>
            <div
              className="section">
              <strong
                className="title">
                Gettysburg Address
              </strong>
              <div
                className="content">
                <span>
                  Four score and seven years ago . . .
                </span>
              </div>
            </div>
          </div>
          
        </div>
      }
      responsiveTo="parent"
      tiny={
        <div
          className="alert wide infoType"
          style={Object {}}>
          <div
            className="body bodyWide">
            <div
              className="icon">
              <IconInformation
                height="1.3333rem"
                viewBox="0 0 48 48"
                width="1.3333rem"
                xmlns="http://www.w3.org/2000/svg" />
            </div>
            <div
              className="section">
              <strong
                className="title">
                Gettysburg Address
              </strong>
              <div
                className="content">
                <span>
                  Four score and seven years ago . . .
                </span>
              </div>
            </div>
          </div>
          
        </div>
      }>
      <div />
    </ResponsiveElement>
  </Alert>
</IntlProvider>
`;

exports[`13. Alert of type success with an action button text content should render an Alert component of type success with an action button 1`] = `
<IntlProvider
  locale="en-US"
  messages={
    Object {
      "Terra.alert.advisory": "Advisory.",
      "Terra.alert.alert": "Alert.",
      "Terra.alert.dismiss": "Dismiss",
      "Terra.alert.error": "Error.",
      "Terra.alert.gapChecking": "Required Action.",
      "Terra.alert.info": "Information.",
      "Terra.alert.outsideRecords": "Outside Records.",
      "Terra.alert.success": "Success.",
      "Terra.alert.warning": "Warning.",
    }
  }>
  <Alert
    alertAction={
      <Button
        isBlock={false}
        isCompact={false}
        isDisabled={false}
        isReversed={false}
        onClick={[Function]}
        size="medium"
        text="Action"
        type="button"
        variant="primary" />
    }
    customIcon={null}
    customStatusColor=""
    onDismiss={null}
    title=""
    type="success">
    <ResponsiveElement
      defaultElement={
        <div
          className="alert narrow successType"
          style={Object {}}>
          <div
            className="body bodyNarrow">
            <div
              className="icon">
              <IconSuccess
                height="1.3333rem"
                viewBox="0 0 48 48"
                width="1.3333rem"
                xmlns="http://www.w3.org/2000/svg" />
            </div>
            <div
              className="section">
              <strong
                className="title">
                Success.
              </strong>
              <div
                className="content">
                This is a success alert.
              </div>
            </div>
          </div>
          <div
            className="actions">
            <Button
              isBlock={false}
              isCompact={false}
              isDisabled={false}
              isReversed={false}
              onClick={[Function]}
              size="medium"
              text="Action"
              type="button"
              variant="primary" />
            
          </div>
        </div>
      }
      responsiveTo="parent"
      tiny={
        <div
          className="alert wide successType"
          style={Object {}}>
          <div
            className="body bodyWide">
            <div
              className="icon">
              <IconSuccess
                height="1.3333rem"
                viewBox="0 0 48 48"
                width="1.3333rem"
                xmlns="http://www.w3.org/2000/svg" />
            </div>
            <div
              className="section">
              <strong
                className="title">
                Success.
              </strong>
              <div
                className="content">
                This is a success alert.
              </div>
            </div>
          </div>
          <div
            className="actions">
            <Button
              isBlock={false}
              isCompact={false}
              isDisabled={false}
              isReversed={false}
              onClick={[Function]}
              size="medium"
              text="Action"
              type="button"
              variant="primary" />
            
          </div>
        </div>
      }>
      <div />
    </ResponsiveElement>
  </Alert>
</IntlProvider>
`;

exports[`14. Dismissable Alert of type custom with action button, custom title and text content should render an Alert component of type custom with an action button 1`] = `
<IntlProvider
  locale="en-US"
  messages={
    Object {
      "Terra.alert.advisory": "Advisory.",
      "Terra.alert.alert": "Alert.",
      "Terra.alert.dismiss": "Dismiss",
      "Terra.alert.error": "Error.",
      "Terra.alert.gapChecking": "Required Action.",
      "Terra.alert.info": "Information.",
      "Terra.alert.outsideRecords": "Outside Records.",
      "Terra.alert.success": "Success.",
      "Terra.alert.warning": "Warning.",
    }
  }>
  <Alert
    alertAction={
      <Button
        isBlock={false}
        isCompact={false}
        isDisabled={false}
        isReversed={false}
        onClick={[Function]}
        size="medium"
        text="Action"
        type="button"
        variant="primary" />
    }
    customIcon={
      <IconHelp
        height="1.3333rem"
        viewBox="0 0 48 48"
        width="1.3333rem"
        xmlns="http://www.w3.org/2000/svg" />
    }
    customStatusColor="orange"
    onDismiss={[Function]}
    title="Help!"
    type="custom">
    <ResponsiveElement
      defaultElement={
        <div
          className="alert narrow customType"
          style={
            Object {
              "color": "orange",
            }
          }>
          <div
            className="body bodyNarrow">
            <div
              className="icon">
              <IconHelp
                height="1.3333rem"
                viewBox="0 0 48 48"
                width="1.3333rem"
                xmlns="http://www.w3.org/2000/svg" />
            </div>
            <div
              className="section sectionCustom">
              <strong
                className="title">
                Help!
              </strong>
              <div
                className="content">
                This is a custom alert.
              </div>
            </div>
          </div>
          <div
            className="actions actionsCustom">
            <Button
              isBlock={false}
              isCompact={false}
              isDisabled={false}
              isReversed={false}
              onClick={[Function]}
              size="medium"
              text="Action"
              type="button"
              variant="primary" />
            <Button
              isBlock={false}
              isCompact={false}
              isDisabled={false}
              isReversed={false}
              onClick={[Function]}
              size="medium"
              text="Dismiss"
              type="button"
              variant="secondary" />
          </div>
        </div>
      }
      responsiveTo="parent"
      tiny={
        <div
          className="alert wide customType"
          style={
            Object {
              "color": "orange",
            }
          }>
          <div
            className="body bodyWide">
            <div
              className="icon">
              <IconHelp
                height="1.3333rem"
                viewBox="0 0 48 48"
                width="1.3333rem"
                xmlns="http://www.w3.org/2000/svg" />
            </div>
            <div
              className="section sectionCustom">
              <strong
                className="title">
                Help!
              </strong>
              <div
                className="content">
                This is a custom alert.
              </div>
            </div>
          </div>
          <div
            className="actions actionsCustom">
            <Button
              isBlock={false}
              isCompact={false}
              isDisabled={false}
              isReversed={false}
              onClick={[Function]}
              size="medium"
              text="Action"
              type="button"
              variant="primary" />
            <Button
              isBlock={false}
              isCompact={false}
              isDisabled={false}
              isReversed={false}
              onClick={[Function]}
              size="medium"
              text="Dismiss"
              type="button"
              variant="secondary" />
          </div>
        </div>
      }>
      <div />
    </ResponsiveElement>
  </Alert>
</IntlProvider>
`;
