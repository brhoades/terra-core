@import './variables';
@import './mixins';

:local {
  /* stylelint-disable selector-class-pattern  */
  .alert {
    align-items: stretch;
    display: flex;
    flex: 1;
    justify-content: space-between;
    overflow: hidden;
    width: 100%;
  }

  .narrow {
    flex-direction: column;
  }

  .wide {
    flex-direction: row;
  }

  .icon {
    flex-shrink: 0;
    margin-right: 0.5rem;
  }

  .body {
    align-items: flex-start;
    display: flex;
    flex: 1 1 auto;
    flex-direction: row;
    margin-left: 0.6667rem;
    margin-top: 1rem;
    overflow: hidden;
    padding-top: 0.1rem;
  }

  .bodyNarrow {
    margin-bottom: 0;
    margin-right: 0.6667rem;
  }

  .bodyWide {
    margin-bottom: 1rem;
    margin-right: 0;
  }

  .section {
    flex: 1;
    padding-top: 0.2rem;
  }

  .sectionCustom {
    @include terra-alert-color($terra-alert-custom-text-color);
  }

  .title {
    float: left;
    margin-right: 0.5833rem;
  }

  .content {
    p {
      margin-top: 0;
    }

    p:last-child {
      margin-bottom: 0;
    }
  }

  .actions {
    align-items: flex-start;
    display: flex;
    flex-direction: row;
    flex-shrink: 0;
    justify-content: flex-end;
    margin: 0.5833rem 0.5833rem 0.5833rem 0.8333rem;
  }

  .actionsCustom {
    @include terra-alert-color($terra-alert-custom-text-color);
  }

  .actions > :first-child {
    margin-right: 0.8333rem;
  }

  .actions > :last-child {
    margin-right: 0;
  }

  .alertType {
    @include terra-alert-box-shadow(var(--terra-Alert-alert-shadow-color));
    @include terra-alert-background-color($terra-alert-alert-color-scheme);
  }

  .errorType {
    @include terra-alert-box-shadow(var(--terra-Alert-error-shadow-color));
    @include terra-alert-background-color($terra-alert-error-color-scheme);
  }

  .warningType {
    @include terra-alert-box-shadow(var(--terra-Alert-warning-shadow-color));
    @include terra-alert-background-color($terra-alert-warning-color-scheme);
  }

  .gapCheckingType {
    @include terra-alert-box-shadow(var(--terra-Alert-gap-checking-shadow-color));
    @include terra-alert-background-color($terra-alert-gap-checking-color-scheme);
  }

  .advisoryType {
    @include terra-alert-box-shadow(var(--terra-Alert-advisory-shadow-color));
    @include terra-alert-background-color($terra-alert-advisory-color-scheme);
  }

  .infoType {
    @include terra-alert-box-shadow(var(--terra-Alert-info-shadow-color));
    @include terra-alert-background-color($terra-alert-info-color-scheme);
  }

  .successType {
    @include terra-alert-box-shadow(var(--terra-Alert-success-shadow-color));
    @include terra-alert-background-color($terra-alert-success-color-scheme);
  }

  .outsideRecordsType {
    @include terra-alert-box-shadow(var(--terra-Alert-outside-records-shadow-color));
    @include terra-alert-background-color($terra-alert-outside-records-color-scheme);
  }

  .customType {
    box-shadow: 2px 0 0 inset;
    @include terra-alert-color($terra-alert-custom-shadow-color);
    @include terra-alert-background-color($terra-alert-custom-color-scheme);
  }

  .alertType .title {
    @include terra-alert-color($terra-alert-alert-title-color-scheme);
  }

  .errorType .title {
    @include terra-alert-color($terra-alert-error-title-color-scheme);
  }

  .gapCheckingType .icon {
    @include terra-alert-color($terra-alert-gap-checking-icon-color-scheme);
  }
  /* stylelint-enable */
}
